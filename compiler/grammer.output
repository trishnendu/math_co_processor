Terminals unused in grammar

   ERROR_TOK


Grammar

    0 $accept: DEBUG $end

    1 DEBUG: block

    2 block: block statement
    3      | %empty

    4 statement: exp SEMICOLON_TOK

    5 exp: ID_TOK EQ_TOK exp2
    6    | ID_TOK PLUS_EQ_TOK exp2
    7    | ID_TOK MINUS_EQ_TOK exp2
    8    | ID_TOK MULT_EQ_TOK exp2
    9    | ID_TOK DIVIDE_EQ_TOK exp2
   10    | exp0

   11 exp2: LPAREN_TOK exp2 RPAREN_TOK
   12     | MINUS_TOK exp2
   13     | exp2 PLUS_TOK exp2
   14     | exp2 MINUS_TOK exp2
   15     | exp2 MULT_TOK exp2
   16     | exp2 DIVIDE_TOK exp2
   17     | exp0
   18     | var

   19 exp0: ID_TOK PLUS_PLUS_TOK
   20     | ID_TOK MINUS_MINUS_TOK
   21     | PLUS_PLUS_TOK ID_TOK
   22     | MINUS_MINUS_TOK ID_TOK

   23 var: ID_TOK
   24    | INTCONST


Terminals, with rules where they appear

$end (0) 0
error (256)
LPAREN_TOK (258) 11
RPAREN_TOK (259) 11
EQ_TOK (260) 5
MINUS_TOK (261) 12 14
PLUS_TOK (262) 13
MULT_TOK (263) 15
DIVIDE_TOK (264) 16
PLUS_EQ_TOK (265) 6
MINUS_EQ_TOK (266) 7
MULT_EQ_TOK (267) 8
DIVIDE_EQ_TOK (268) 9
SEMICOLON_TOK (269) 4
MINUS_MINUS_TOK (270) 20 22
PLUS_PLUS_TOK (271) 19 21
ERROR_TOK (272)
INTCONST (273) 24
ID_TOK (274) 5 6 7 8 9 19 20 21 22 23
UMINUS (275)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
DEBUG (22)
    on left: 1, on right: 0
block (23)
    on left: 2 3, on right: 1 2
statement (24)
    on left: 4, on right: 2
exp (25)
    on left: 5 6 7 8 9 10, on right: 4
exp2 (26)
    on left: 11 12 13 14 15 16 17 18, on right: 5 6 7 8 9 11 12 13
    14 15 16
exp0 (27)
    on left: 19 20 21 22, on right: 10 17
var (28)
    on left: 23 24, on right: 18


State 0

    0 $accept: . DEBUG $end

    $default  reduce using rule 3 (block)

    DEBUG  go to state 1
    block  go to state 2


State 1

    0 $accept: DEBUG . $end

    $end  shift, and go to state 3


State 2

    1 DEBUG: block .
    2 block: block . statement

    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    ID_TOK           shift, and go to state 6

    $default  reduce using rule 1 (DEBUG)

    statement  go to state 7
    exp        go to state 8
    exp0       go to state 9


State 3

    0 $accept: DEBUG $end .

    $default  accept


State 4

   22 exp0: MINUS_MINUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 10


State 5

   21 exp0: PLUS_PLUS_TOK . ID_TOK

    ID_TOK  shift, and go to state 11


State 6

    5 exp: ID_TOK . EQ_TOK exp2
    6    | ID_TOK . PLUS_EQ_TOK exp2
    7    | ID_TOK . MINUS_EQ_TOK exp2
    8    | ID_TOK . MULT_EQ_TOK exp2
    9    | ID_TOK . DIVIDE_EQ_TOK exp2
   19 exp0: ID_TOK . PLUS_PLUS_TOK
   20     | ID_TOK . MINUS_MINUS_TOK

    EQ_TOK           shift, and go to state 12
    PLUS_EQ_TOK      shift, and go to state 13
    MINUS_EQ_TOK     shift, and go to state 14
    MULT_EQ_TOK      shift, and go to state 15
    DIVIDE_EQ_TOK    shift, and go to state 16
    MINUS_MINUS_TOK  shift, and go to state 17
    PLUS_PLUS_TOK    shift, and go to state 18


State 7

    2 block: block statement .

    $default  reduce using rule 2 (block)


State 8

    4 statement: exp . SEMICOLON_TOK

    SEMICOLON_TOK  shift, and go to state 19


State 9

   10 exp: exp0 .

    $default  reduce using rule 10 (exp)


State 10

   22 exp0: MINUS_MINUS_TOK ID_TOK .

    $default  reduce using rule 22 (exp0)


State 11

   21 exp0: PLUS_PLUS_TOK ID_TOK .

    $default  reduce using rule 21 (exp0)


State 12

    5 exp: ID_TOK EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 24
    exp0  go to state 25
    var   go to state 26


State 13

    6 exp: ID_TOK PLUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 27
    exp0  go to state 25
    var   go to state 26


State 14

    7 exp: ID_TOK MINUS_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 28
    exp0  go to state 25
    var   go to state 26


State 15

    8 exp: ID_TOK MULT_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 29
    exp0  go to state 25
    var   go to state 26


State 16

    9 exp: ID_TOK DIVIDE_EQ_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 30
    exp0  go to state 25
    var   go to state 26


State 17

   20 exp0: ID_TOK MINUS_MINUS_TOK .

    $default  reduce using rule 20 (exp0)


State 18

   19 exp0: ID_TOK PLUS_PLUS_TOK .

    $default  reduce using rule 19 (exp0)


State 19

    4 statement: exp SEMICOLON_TOK .

    $default  reduce using rule 4 (statement)


State 20

   11 exp2: LPAREN_TOK . exp2 RPAREN_TOK

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 31
    exp0  go to state 25
    var   go to state 26


State 21

   12 exp2: MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 32
    exp0  go to state 25
    var   go to state 26


State 22

   24 var: INTCONST .

    $default  reduce using rule 24 (var)


State 23

   19 exp0: ID_TOK . PLUS_PLUS_TOK
   20     | ID_TOK . MINUS_MINUS_TOK
   23 var: ID_TOK .

    MINUS_MINUS_TOK  shift, and go to state 17
    PLUS_PLUS_TOK    shift, and go to state 18

    $default  reduce using rule 23 (var)


State 24

    5 exp: ID_TOK EQ_TOK exp2 .
   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 5 (exp)


State 25

   17 exp2: exp0 .

    $default  reduce using rule 17 (exp2)


State 26

   18 exp2: var .

    $default  reduce using rule 18 (exp2)


State 27

    6 exp: ID_TOK PLUS_EQ_TOK exp2 .
   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 6 (exp)


State 28

    7 exp: ID_TOK MINUS_EQ_TOK exp2 .
   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 7 (exp)


State 29

    8 exp: ID_TOK MULT_EQ_TOK exp2 .
   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 8 (exp)


State 30

    9 exp: ID_TOK DIVIDE_EQ_TOK exp2 .
   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 9 (exp)


State 31

   11 exp2: LPAREN_TOK exp2 . RPAREN_TOK
   13     | exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    RPAREN_TOK  shift, and go to state 37
    MINUS_TOK   shift, and go to state 33
    PLUS_TOK    shift, and go to state 34
    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36


State 32

   12 exp2: MINUS_TOK exp2 .
   13     | exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    $default  reduce using rule 12 (exp2)


State 33

   14 exp2: exp2 MINUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 38
    exp0  go to state 25
    var   go to state 26


State 34

   13 exp2: exp2 PLUS_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 39
    exp0  go to state 25
    var   go to state 26


State 35

   15 exp2: exp2 MULT_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 40
    exp0  go to state 25
    var   go to state 26


State 36

   16 exp2: exp2 DIVIDE_TOK . exp2

    LPAREN_TOK       shift, and go to state 20
    MINUS_TOK        shift, and go to state 21
    MINUS_MINUS_TOK  shift, and go to state 4
    PLUS_PLUS_TOK    shift, and go to state 5
    INTCONST         shift, and go to state 22
    ID_TOK           shift, and go to state 23

    exp2  go to state 41
    exp0  go to state 25
    var   go to state 26


State 37

   11 exp2: LPAREN_TOK exp2 RPAREN_TOK .

    $default  reduce using rule 11 (exp2)


State 38

   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   14     | exp2 MINUS_TOK exp2 .
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 14 (exp2)


State 39

   13 exp2: exp2 . PLUS_TOK exp2
   13     | exp2 PLUS_TOK exp2 .
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2

    MULT_TOK    shift, and go to state 35
    DIVIDE_TOK  shift, and go to state 36

    $default  reduce using rule 13 (exp2)


State 40

   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   15     | exp2 MULT_TOK exp2 .
   16     | exp2 . DIVIDE_TOK exp2

    $default  reduce using rule 15 (exp2)


State 41

   13 exp2: exp2 . PLUS_TOK exp2
   14     | exp2 . MINUS_TOK exp2
   15     | exp2 . MULT_TOK exp2
   16     | exp2 . DIVIDE_TOK exp2
   16     | exp2 DIVIDE_TOK exp2 .

    $default  reduce using rule 16 (exp2)
