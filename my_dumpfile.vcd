$date
	Tue May 08 14:27:33 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module EXEU $end
$var wire 16 ! MDR_in [15:0] $end
$var wire 16 " AU_out [15:0] $end
$var reg 16 # AU_in1 [15:0] $end
$var reg 16 $ AU_in2 [15:0] $end
$var reg 1 % AU_op_enable $end
$var reg 8 & Dest_address [7:0] $end
$var reg 4 ' Dest_reg [3:0] $end
$var reg 1 ( Global_clk $end
$var reg 8 ) MAR [7:0] $end
$var reg 16 * MDR_out [15:0] $end
$var reg 1 + Mem_op_enable $end
$var reg 4 , Mode [3:0] $end
$var reg 4 - Opcode [3:0] $end
$var reg 8 . PC [7:0] $end
$var reg 1 / Read_back_sig $end
$var reg 1 0 Read_sig $end
$var reg 4 1 Src_reg1 [3:0] $end
$var reg 4 2 Src_reg2 [3:0] $end
$var reg 1 3 Write_back_sig $end
$var reg 1 4 Write_sig $end
$var reg 1 5 hlt $end
$var integer 32 6 i [31:0] $end
$var integer 32 7 total_clk_cycle [31:0] $end
$scope module test_au $end
$var wire 16 8 AU_in_1 [15:0] $end
$var wire 16 9 AU_in_2 [15:0] $end
$var wire 1 % AU_op_enable $end
$var wire 1 ( Global_clk $end
$var wire 4 : Mode [3:0] $end
$var reg 16 ; AU_out [15:0] $end
$var reg 1 < output_signbit $end
$var reg 16 = tmp_in_1 [15:0] $end
$var reg 16 > tmp_in_2 [15:0] $end
$var reg 16 ? tmp_swap [15:0] $end
$upscope $end
$scope module test_memu $end
$var wire 8 @ Address_in [7:0] $end
$var wire 16 A Data_in [15:0] $end
$var wire 1 ( Global_clk $end
$var wire 1 + Mem_op_enable $end
$var wire 1 / Read_back_sig $end
$var wire 1 0 Read_sig $end
$var wire 1 3 Write_back_sig $end
$var wire 1 4 Write_sig $end
$var reg 16 B Data_out [15:0] $end
$var integer 32 C file [31:0] $end
$var integer 32 D i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx D
b10000000000000000000000000000011 C
bx B
bx A
bx @
bx ?
bx >
bx =
x<
bx ;
bx :
bx 9
bx 8
b0 7
bx 6
05
x4
x3
bx 2
bx 1
x0
0/
bx .
bx -
bx ,
x+
bx *
bx )
0(
bx '
bx &
x%
bx $
bx #
bx "
bx !
$end
#1
b111xxxx10000000 !
b111xxxx10000000 B
1+
b0 )
b0 @
04
10
b0 .
b1 7
1(
#2
b10 7
0(
#3
0+
b11 7
1(
#4
b100 7
0(
#5
b1100100 !
b1100100 B
1+
b1 )
b1 @
b1 .
b10000000 &
b111 -
10
b101 7
1(
#6
b110 7
0(
#7
0+
b111 7
1(
#8
b1000 7
0(
#9
1+
14
b1100100 *
b1100100 A
b10000000 )
b10000000 @
00
b1001 7
1(
#10
b1010 7
0(
#11
0+
b1011 7
1(
#12
b1100 7
0(
#13
b1010000xxxxxxxx !
b1010000xxxxxxxx B
1+
b10 )
b10 @
10
b10 .
04
b1101 7
1(
#14
b1110 7
0(
#15
0+
b1111 7
1(
#16
b10000 7
0(
#17
b0 !
b0 B
1+
b11 )
b11 @
b11 .
b0 '
b101 -
10
b10001 7
1(
#18
b10010 7
0(
#19
0+
b10011 7
1(
#20
b10100 7
0(
#21
b101100000000xxxx !
b101100000000xxxx B
1+
b100 )
b100 @
b100 .
b10000 6
10
b10101 7
1(
#22
b10110 7
0(
#23
0+
b10111 7
1(
#24
b11000 7
0(
#25
b101 !
b101 B
1+
b101 )
b101 @
b101 .
b0 1
b1011 -
10
b11001 7
1(
#26
b11010 7
0(
#27
0+
b11011 7
1(
#28
b11100 7
0(
#29
b1000000000000101 "
b1000000000000101 ;
b0 ?
1<
b0 >
b101 =
1%
b1010 ,
b1010 :
b101 $
b101 9
b0 #
b0 8
00
b11101 7
1(
#30
b11110 7
0(
#31
0%
b11111 7
1(
#32
b100000 7
0(
#33
b100000110000000 !
b100000110000000 B
1+
b110 )
b110 @
10
b110 .
b10000 6
b100001 7
1(
#34
b100010 7
0(
#35
0+
b100011 7
1(
#36
b100100 7
0(
#37
b1100100 !
b1100100 B
1+
b10000000 )
b10000000 @
b1 '
b100 -
10
b100101 7
1(
#38
b100110 7
0(
#39
0+
b100111 7
1(
#40
b101000 7
0(
#41
b101100010001xxxx !
b101100010001xxxx B
1+
b111 )
b111 @
b111 .
b10000 6
10
b101001 7
1(
#42
b101010 7
0(
#43
0+
b101011 7
1(
#44
b101100 7
0(
#45
b1010 !
b1010 B
1+
b1000 )
b1000 @
b1000 .
b1 1
b1011 -
10
b101101 7
1(
#46
b101110 7
0(
#47
0+
b101111 7
1(
#48
b110000 7
0(
#49
b1011010 "
b1011010 ;
0<
b1010 >
b1100100 =
1%
b1010 ,
b1010 :
b1010 $
b1010 9
b1100100 #
b1100100 8
00
b110001 7
1(
#50
b110010 7
0(
#51
0%
b110011 7
1(
#52
b110100 7
0(
#53
b110100100001xxxx !
b110100100001xxxx B
1+
b1001 )
b1001 @
10
b1001 .
b10000 6
b110101 7
1(
#54
b110110 7
0(
#55
0+
b110111 7
1(
#56
b111000 7
0(
#57
b100 !
b100 B
1+
b1010 )
b1010 @
b1010 .
b10 '
b1101 -
10
b111001 7
1(
#58
b111010 7
0(
#59
0+
b111011 7
1(
#60
b111100 7
0(
#61
b101101000 "
b101101000 ;
b100 >
b1011010 =
1%
b1100 ,
b1100 :
b100 $
b100 9
b1011010 #
b1011010 8
00
b111101 7
1(
#62
b111110 7
0(
#63
0%
b111111 7
1(
#64
b1000000 7
0(
#65
b1000000100000010 !
b1000000100000010 B
1+
b1011 )
b1011 @
10
b1011 .
b10000 6
b1000001 7
1(
#66
b1000010 7
0(
#67
0+
b1000011 7
1(
#68
b1000100 7
0(
#69
b101100011 "
b101100011 ;
b101 ?
b101 >
b101101000 =
1%
b1000 ,
b1000 :
b101101000 $
b101101000 9
b1000000000000101 #
b1000000000000101 8
b10 2
b0 1
b1 '
b1000 -
00
b1000101 7
1(
#70
b1000110 7
0(
#71
0%
b1000111 7
1(
#72
b1001000 7
0(
#73
b110000110000001 !
b110000110000001 B
1+
b1100 )
b1100 @
10
b1100 .
b10000 6
b1001001 7
1(
#74
b1001010 7
0(
#75
0+
b1001011 7
1(
#76
b1001100 7
0(
#77
1+
14
b101100011 *
b101100011 A
b10000001 )
b10000001 @
b110 -
00
b1001101 7
1(
#78
b1001110 7
0(
#79
0+
b1001111 7
1(
#80
b1010000 7
0(
#81
b1xxxxxxxxxxxx !
b1xxxxxxxxxxxx B
1+
b1101 )
b1101 @
10
b1101 .
04
b1010001 7
1(
#82
b1010010 7
0(
#83
0+
b1010011 7
1(
#84
b1010100 7
0(
#85
b100000000 D
03
b1110 .
15
b1 -
00
b1010101 7
1(
#86
b1010110 7
0(
#87
b1010111 7
1(
